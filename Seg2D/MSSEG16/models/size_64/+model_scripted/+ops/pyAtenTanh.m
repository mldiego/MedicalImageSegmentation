function varargout = pyAtenTanh(varargin)
% Function for the PyTorch operator named aten::tanh.
%
% You must implement this function because the PyTorch importer was unable
% to generate MATLAB code corresponding to the aten::tanh PyTorch
% operator.
%
% To implement this function, follow these steps:
% 1) If you imported this network using Deep Network Designer, first check
%    that the network input sizes are correct. Next, fix any issues that
%    occur before the layers that call this function. For more information
%    about issues with the network, check the import report in Deep Network
%    Designer.
% 2) Look up the aten::tanh PyTorch operator in the PyTorch
%    documentation to find out what the operator does.
% 3) Implement the PyTorch operator in one of these ways:
%    a. Replace the custom layers that call this function with built-in
%       layers from Deep Learning Toolbox. Custom layers with placeholders
%       are displayed in a warning in the command window or the import
%       report in Deep Network Designer. Check the predict function of the
%       custom layer that calls this function. If the predict function has
%       the rank (number of dimension) as input or output, then there is no
%       equivalent built-in layer. For a list of supported built-in layers,
%       see:
%       https://www.mathworks.com/help/deeplearning/ug/list-of-deep-learning-layers.html
%    b. Write MATLAB code that is equivalent to the PyTorch operator.
%       In some cases, you can use built-in dlarray operations to help
%       write the function. For a list of built-in operations, see:
%       https://www.mathworks.com/help/deeplearning/ug/list-of-functions-with-dlarray-support.html
% 4) If you are viewing this network inside Deep Network Designer, you can
%    debug this function by putting breakpoints in this file, and pressing
%    the 'Analyze' button in Deep Network Designer. If you are not viewing
%    this network inside Deep Network Designer, call
%    analyzeNetwork(myNetwork) to achieve the same effect.
% 5) When you have finished editing the function, remove the error call at
%    the bottom of the function before using the network.
%
% Inputs:
%   Each input argument is a struct with fields:
%       value: Input data
%       rank:  Number of dimensions of the input data, including any
%              trailing dimensions of size 1, specified as a scalar.
%   Most functions will have a single input. Some functions can have
%   multiple inputs if the original PyTorch operator expects multiple
%   inputs. If a function requires multiple inputs, then varargin{1} is the
%   first input, varargin{2} is the second input, and so on.
%
% Outputs:
%   Each output argument is a struct with fields:
%       value: Output data
%       rank:  Number of dimensions of the output data, including any
%              trailing dimensions of size 1, specified as a scalar.
%   The function can have multiple outputs if the original PyTorch
%   operator expects multiple outputs. If a function returns multiple
%   outputs, then varargout{1} is the first output, varargout{2} is the
%   second output, and so on.

import model_scripted.ops.*

%% Do Not Edit - Code Generated by PyTorch Importer
% This code permutes the dimensions of the inputs into PyTorch ordering.
% When you implement the rest of this function, assume that the dimensions
% of the arrays are in the same order that they appear in the original
% PyTorch model.
inputs = cell(1,nargin);
[inputs{:}] = permuteToPyTorchDimensionOrder(varargin{:});

%% Do Not Edit - Code Generated by PyTorch Importer
% This code creates a cell array for the outputs.
outputs = cell(1,nargout);


%% To Do - Implement Function
% Write code to implement the function here. The results must be assigned
% to a cell array named 'outputs' where each element is a structure array
% containing the values of the output and rank. For example, if the first
% output has value Y with Yrank number of dimensions, then
% outputs{1} = struct('value',Y,'rank',Yrank);

%% To Do - Delete Error
% After you have implemented the function, delete this error.
error(message('nnet_cnn_pytorchconverter:pytorchconverter:PlaceholderFunction', 'pyAtenTanh'));

%% Do Not Edit - Code Generated by PyTorch Importer
% This code permutes the dimensions of the outputs back into reverse-PyTorch
% ordering.
varargout = cell(1,nargout);
[varargout{:}] = permutePyTorchToReversePyTorch(outputs{:});
end
